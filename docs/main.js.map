{"version":3,"file":"main.js","mappings":"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","sources":["./projects/ngx-progress-overlay/src/lib/ngx-progress-overlay.component.ts","./projects/ngx-progress-overlay/src/lib/ngx-progress-overlay.component.html","./projects/ngx-progress-overlay/src/lib/ngx-progress-overlay.module.ts","./projects/ngx-progress-overlay/src/lib/ngx-progress-overlay.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgxProgressOverlayService } from './ngx-progress-overlay.service'\n\n@Component({\n  selector: 'ngx-progress-overlay',\n  templateUrl: './ngx-progress-overlay.component.html',\n  styleUrls: ['./ngx-progress-overlay.component.css'],\n})\nexport class NgxProgressOverlayComponent implements OnInit {\n\n  progressColor     : string = '#c2185b'\n  progressValue     : number = 0;\n  progressText      : string = '';\n  displayToggle     : boolean = false;\n  progressFormatted : string = '0 100'\n\n  valueColor        : string = 'white';\n  textColor         : string = 'white';\n  donutWidth        : number = 1;\n  overlayColor      : string = 'rgba(0,0,0,0.8)';\n\n  constructor(\n    private dataService : NgxProgressOverlayService\n  ) { }\n\n  ngOnInit() {\n\n    // Subscribe for toggle display\n    this.dataService.display$.subscribe(\n      d => {\n        this.displayToggle = d; \n      }\n    )\n    \n    // Subscribe for value changes\n    this.dataService.value$.subscribe(\n      v => {\n        if(v<0){\n          this.progressValue = 0; \n        }else if(v>100){\n          this.progressValue = 100;\n        }else{\n          this.progressValue = v;\n        }\n        let remainingValue = 100 - this.progressValue\n        this.progressFormatted = this.progressValue.toString() + ' ' + remainingValue.toString()\n      }\n    )\n    \n    // Subscribe for text changes\n    this.dataService.text$.subscribe(\n      t => {\n        this.progressText = t; \n      }\n    )\n    \n    // Subscribe for color changes\n    this.dataService.color$.subscribe(\n      c => {\n        if(c!=undefined && c!=''){\n          this.progressColor = c; \n        }\n      }\n    )\n    \n    // Subscribe for value color changes\n    this.dataService.valueColor$.subscribe(\n      c => {\n        if(c!=undefined && c!=''){\n          this.valueColor = c; \n        }\n      }\n    )\n    \n    // Subscribe for text color changes\n    this.dataService.textColor$.subscribe(\n      c => {\n        if(c!=undefined && c!=''){\n          this.textColor = c; \n        }\n      }\n    )\n\n    // Subscribe for donut width changes\n    this.dataService.donutWidth$.subscribe(\n      w => {\n        if(w!=undefined && w>0){\n          this.donutWidth = w; \n        }\n      }\n    )\n\n    // Subscribe for overlay color changes\n    this.dataService.overlayColor$.subscribe(\n      c => {\n        if(c!=undefined && c!=''){\n          this.overlayColor = c; \n        }\n      }\n    )\n\n  }\n\n}","<div class=\"progress-overlay\" [ngStyle]=\"{backgroundColor: overlayColor}\" *ngIf=\"displayToggle==true\">\n    <div class=\"progress-overlay-content\">\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 42 42\" class=\"donut\">\n            <circle class=\"donut-ring\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" stroke=\"#eeeeee\" [attr.stroke-width]=\"donutWidth\"></circle>\n            <circle class=\"donut-segment\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" [attr.stroke]=\"progressColor\" [attr.stroke-width]=\"donutWidth\" [attr.stroke-dasharray]=\"progressFormatted\" stroke-dashoffset=\"25\"></circle>\n            <g class=\"progress-content-text\">\n                <text x=\"50%\" y=\"50%\" class=\"progress-content-number\" [ngStyle]=\"{fill: valueColor}\">\n                {{progressValue}}%\n                </text>\n                <text x=\"50%\" y=\"50%\" class=\"progress-content-label\" [ngStyle]=\"{fill: textColor}\">\n                {{progressText}}\n                </text>\n            </g>\n        </svg>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'\nimport { NgxProgressOverlayComponent } from './ngx-progress-overlay.component';\n\n@NgModule({\n  declarations: [NgxProgressOverlayComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxProgressOverlayComponent]\n})\nexport class NgxProgressOverlayModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject }    from 'rxjs';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxProgressOverlayService {\n\n  // Property subjects\n  private displaySource = new Subject<boolean>();\n  private valueSource = new Subject<number>();\n  private textSource = new Subject<string>();\n  private colorSource = new Subject<string>();\n  private valueColorSource = new Subject<string>();\n  private textColorSource = new Subject<string>();\n  private donutWidthSource = new Subject<number>();\n  private overlayColorSource = new Subject<string>();\n\n  // Corresponding observables\n  display$ = this.displaySource.asObservable();\n  value$ = this.valueSource.asObservable();\n  text$ = this.textSource.asObservable();\n  color$ = this.colorSource.asObservable();\n  valueColor$ = this.valueColorSource.asObservable();\n  textColor$ = this.textColorSource.asObservable();\n  donutWidth$ = this.donutWidthSource.asObservable();\n  overlayColor$ = this.overlayColorSource.asObservable();\n  \n  constructor() { }\n\n  // Show progress bar\n  show(text:string,color?:string,valueColor?:string,textColor?:string,donutWidth?:number,overlayColor?:string){\n    this.valueSource.next(0);\n    this.textSource.next(text)\n    this.colorSource.next(color)\n    this.valueColorSource.next(valueColor);\n    this.textColorSource.next(textColor);\n    this.donutWidthSource.next(donutWidth);\n    this.overlayColorSource.next(overlayColor);\n    this.displaySource.next(true);\n  }\n\n  // Hide progress bar\n  hide(){\n    this.displaySource.next(false);\n  }\n\n  // Set progress bar value\n  setProgress(value:number){\n    this.valueSource.next(value);\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { NgxProgressOverlayService } from '../../projects/ngx-progress-overlay/src/lib/ngx-progress-overlay.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'ngx-progress-overlay-ws';\n\n  code : {\n    installation : string,\n    usage : any\n  } = {\n    installation : '',\n    usage : ''\n  };\n\n  constructor(\n    private progressService : NgxProgressOverlayService\n  ){}\n\n  ngOnInit() {\n\n    this.code = {\n      installation : 'npm i ngx-progress-overlay',\n      usage : {\n        step1 : `import { NgxProgressOverlayModule } from 'ngx-progress-overlay';\n\n@NgModule({\n    imports: [\n        NgxProgressOverlayModule\n    ]\n})\n        \nexport class AppModule { }`,\n        step2 : `import { NgxProgressOverlayService } from 'ngx-progress-overlay';\n\nclass AppComponent implements OnInit {\n          \n    constructor(private progressOverlay: NgxProgressOverlayService) { }\n        \n    ngOnInit() {\n    \n        // Shows progress bar (Params : overlay text, progress bar color, progress value color, overlay text color, donut width)\n        this.progressOverlay.show('text','#c2185b','white','lightslategray',1,'rgba(0,0,0,0.8)');\n    \n        // Set progress value\n        this.progressOverlay.setProgress(50);\n    \n        // Hides progress bar\n        this.progressOverlay.hide();\n    \n    }\n    \n}`,\n        step3 : `<ngx-progress-overlay></ngx-progress-overlay>`\n      } \n  }\n\n  }\n\n  test(){\n    this.progressService.show('Sit back & relax!','#c2185b','white','lightslategray',1,'rgba(0,0,0,0.8)');\n    setTimeout(()=>{ this.progressService.setProgress(10) }, 1000);\n    setTimeout(()=>{ this.progressService.setProgress(20) }, 2000);\n    setTimeout(()=>{ this.progressService.setProgress(30) }, 3000);\n    setTimeout(()=>{ this.progressService.setProgress(40) }, 4000);\n    setTimeout(()=>{ this.progressService.setProgress(50) }, 5000);\n    setTimeout(()=>{ this.progressService.setProgress(60) }, 6000);\n    setTimeout(()=>{ this.progressService.setProgress(70) }, 7000);\n    setTimeout(()=>{ this.progressService.setProgress(80) }, 8000);\n    setTimeout(()=>{ this.progressService.setProgress(90) }, 9000);\n    setTimeout(()=>{ this.progressService.setProgress(100) }, 10000);\n    setTimeout(()=>{ this.progressService.hide() }, 11000);\n  }\n}\n","<mat-toolbar color=\"primary\" style=\"position: sticky; top: 0; z-index: 999\">\n  <span style=\"display: flex; flex-grow: 1\">Ngx-Progress-Overlay</span>\n</mat-toolbar>\n\n<div class=\"container\">\n  <br /><br />\n\n  <div class=\"align-center\">\n    A simple donut progress bar with full screen overlay.\n  </div>\n\n  <br />\n\n  <div class=\"align-center\">\n    <button mat-raised-button color=\"primary\" (click)=\"test()\">\n      Start Loader\n    </button>\n  </div>\n\n  <br /><br />\n\n  <h4>Installation</h4>\n\n  <mat-card>\n    <pre class=\"code\">{{ code.installation }}</pre>\n  </mat-card>\n\n  <br /><br />\n\n  <h4>Usage</h4>\n\n  <div class=\"text-secondary\">\n    Import `NgxProgressOverlayModule` in the root module (`AppModule`) :\n  </div>\n\n  <br />\n\n  <mat-card>\n    <pre class=\"code\">{{ code.usage.step1 }}</pre>\n  </mat-card>\n\n  <br />\n\n  <div class=\"text-secondary\">\n    Add `NgxProgressOverlayService` service in your component :\n  </div>\n\n  <br />\n\n  <mat-card>\n    <pre class=\"code\">{{ code.usage.step2 }}</pre>\n  </mat-card>\n\n  <br />\n\n  <div class=\"text-secondary\">\n    Finally, use NgxProgressOverlayComponent in your template\n  </div>\n\n  <br />\n\n  <mat-card>\n    <pre class=\"code\">{{ code.usage.step3 }}</pre>\n  </mat-card>\n\n  <br /><br />\n\n  <div class=\"align-center\">\n    <a\n      matTooltip=\"Github\"\n      target=\"_blank\"\n      href=\"https://github.com/monkeyscript/ngx-progress-overlay\"\n    >\n      <button mat-icon-button color=\"primary\">\n        <i class=\"fa fa-github\"></i>\n      </button>\n    </a>\n  </div>\n\n  <br /><br />\n</div>\n\n<ngx-progress-overlay></ngx-progress-overlay>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxProgressOverlayModule } from '../../projects/ngx-progress-overlay/src/lib/ngx-progress-overlay.module'\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxProgressOverlayModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  imports: [MatToolbarModule, MatButtonModule, MatTooltipModule, MatCardModule],\n  exports: [MatToolbarModule, MatButtonModule, MatTooltipModule, MatCardModule],\n})\nexport class MaterialModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["i0","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","overlayColor","ɵɵadvance","ɵɵattribute","donutWidth","progressColor","progressFormatted","_c1","valueColor","ɵɵtextInterpolate1","progressValue","textColor","progressText","NgxProgressOverlayComponent","constructor","dataService","displayToggle","ngOnInit","display$","subscribe","d","value$","v","remainingValue","toString","text$","t","color$","c","undefined","valueColor$","textColor$","donutWidth$","w","overlayColor$","_","ɵɵdirectiveInject","i1","NgxProgressOverlayService","_2","selectors","decls","vars","consts","template","NgxProgressOverlayComponent_Template","rf","ctx","ɵɵtemplate","NgxProgressOverlayComponent_div_0_Template","CommonModule","NgxProgressOverlayModule","_3","declarations","imports","exports","Subject","displaySource","valueSource","textSource","colorSource","valueColorSource","textColorSource","donutWidthSource","overlayColorSource","asObservable","show","text","color","next","hide","setProgress","value","factory","ɵfac","providedIn","AppComponent","progressService","title","code","installation","usage","step1","step2","step3","test","setTimeout","AppComponent_Template","ɵɵlistener","AppComponent_Template_button_click_10_listener","ɵɵtextInterpolate","BrowserModule","BrowserAnimationsModule","MaterialModule","AppModule","bootstrap","MatButtonModule","MatToolbarModule","MatCardModule","MatTooltipModule","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}